#! /bin/sh /usr/share/dpatch/dpatch-run
## crashdump_warning.dpatch by  <mckinstry@debian.org>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: No description.

@DPATCH@
diff -urNad kexec-tools-1.101~/kexec-tools-1.101/kexec/arch/x86_64/crashdump-x86_64.c kexec-tools-1.101/kexec-tools-1.101/kexec/arch/x86_64/crashdump-x86_64.c
--- kexec-tools-1.101~/kexec-tools-1.101/kexec/arch/x86_64/crashdump-x86_64.c	2006-09-01 11:24:29.000000000 +0100
+++ kexec-tools-1.101/kexec-tools-1.101/kexec/arch/x86_64/crashdump-x86_64.c	2006-09-01 11:24:30.000000000 +0100
@@ -602,7 +602,9 @@
 	memset(memmap_p, 0, sz);
 	add_memmap(memmap_p, BACKUP_START, BACKUP_SIZE);
 	sz = crash_reserved_mem.end - crash_reserved_mem.start +1;
-	add_memmap(memmap_p, crash_reserved_mem.start, sz);
+	if (add_memmap(memmap_p, crash_reserved_mem.start, sz) < 0) {
+		return ENOCRASHKERNEL;
+	}
 
 	/* Create a backup region segment to store backup data*/
 	sz = (BACKUP_SIZE + align - 1) & ~(align - 1);
@@ -611,14 +613,14 @@
 	info->backup_start = add_buffer(info, tmp, sz, sz, align,
 				0, max_addr, 1);
 	if (delete_memmap(memmap_p, info->backup_start, sz) < 0)
-		return -1;
+		return EFAILED;
 
 	/* Create elf header segment and store crash image data. */
 	nr_cpus = sysconf(_SC_NPROCESSORS_CONF);
 	if (nr_cpus < 0) {
 		fprintf(stderr,"kexec_load (elf header segment)"
 			" failed: %s\n", strerror(errno));
-		return -1;
+		return EFAILED;
 	}
 	sz = 	sizeof(Elf64_Ehdr) + nr_cpus * sizeof(Elf64_Phdr) +
 			nr_ranges * sizeof(Elf64_Phdr);
diff -urNad kexec-tools-1.101~/kexec-tools-1.101/kexec/arch/x86_64/kexec-elf-x86_64.c kexec-tools-1.101/kexec-tools-1.101/kexec/arch/x86_64/kexec-elf-x86_64.c
--- kexec-tools-1.101~/kexec-tools-1.101/kexec/arch/x86_64/kexec-elf-x86_64.c	2006-09-01 11:24:29.000000000 +0100
+++ kexec-tools-1.101/kexec-tools-1.101/kexec/arch/x86_64/kexec-elf-x86_64.c	2006-09-01 11:25:21.000000000 +0100
@@ -240,7 +240,7 @@
 			rc = load_crashdump_segments(info, modified_cmdline,
 							max_addr, 0);
 			if (rc < 0)
-				return -1;
+				return rc;
 			/* Use new command line. */
 			command_line = modified_cmdline;
 			command_line_len = strlen(modified_cmdline) + 1;
diff -urNad kexec-tools-1.101~/kexec-tools-1.101/kexec/kexec.c kexec-tools-1.101/kexec-tools-1.101/kexec/kexec.c
--- kexec-tools-1.101~/kexec-tools-1.101/kexec/kexec.c	2006-09-01 11:24:29.000000000 +0100
+++ kexec-tools-1.101/kexec-tools-1.101/kexec/kexec.c	2006-09-01 11:24:30.000000000 +0100
@@ -575,9 +575,20 @@
 			}
 		}
 	}
-	if (file_type[i].load(argc, argv, kernel_buf, kernel_size, &info) < 0) {
-		fprintf(stderr, "Cannot load %s\n", kernel);
-		return -1;
+	result = file_type[i].load(argc, argv, kernel_buf, kernel_size, &info);
+	if (result < 0) {
+		switch (result) {
+		case ENOCRASHKERNEL:
+			fprintf(stderr, 
+				"No crash kernel segment found in /proc/iomem\n"
+				"Please check the crashkernel= boot parameter.\n");
+			break;
+		case EFAILED:
+		default:
+			fprintf(stderr, "Cannot load %s\n", kernel);
+			break;
+		}
+		return result;
 	}
 	/* If we are not in native mode setup an appropriate trampoline */
 	if (arch_compat_trampoline(&info) < 0) {
diff -urNad kexec-tools-1.101~/kexec-tools-1.101/kexec/kexec.h kexec-tools-1.101/kexec-tools-1.101/kexec/kexec.h
--- kexec-tools-1.101~/kexec-tools-1.101/kexec/kexec.h	2006-09-01 11:24:29.000000000 +0100
+++ kexec-tools-1.101/kexec-tools-1.101/kexec/kexec.h	2006-09-01 11:24:30.000000000 +0100
@@ -53,6 +53,15 @@
 #endif
 
 
+/*
+ * Document some of the reasons why crashdump may fail, so we can give
+ * better error messaging
+ */
+
+#define		EFAILED		-1	/* default error code 	*/
+#define		ENOCRASHKERNEL	-2	/* no memory reserved for crashkernel */
+
+
 #if 0
 /*
  * This function doesn't actually exist.  The idea is that when someone uses the macros
