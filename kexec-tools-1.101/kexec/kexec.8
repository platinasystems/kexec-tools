.\" Process this file with
.\" groff -man -Tascii kexec.8
.\"
.TH kexec 8 "April 2006" Linux "User Manuals"
.SH NAME
kexec \- directly boot into a new kernel
.SH SYNOPSIS
.B /sbin/kexec
.RI \-l|\-\-load\  kernel-image
.RI "[\-\-append=" command\-line\-options]
.RI "[\-\-initrd=" initrd\-image]
[\-\-mem\-min= addr ] [\-\-mem\-max= addr ]
[-t|\-\-type]

.B /sbin/kexec
-e|\-\-exec [-f|\-\-force] [-x|\-\-no-ifdown]

.B /sbin/kexec
-u|\-\-unload

.B /sbin/kexec
-p|\-\-load-panic

.B /sbin/kexec
-v|\-\-version 

.B /sbin/kexec
-h|\-\-help

.SH DESCRIPTION
.B kexec
is a utility that enables you to load and boot into another
kernel from the currently running kernel using the kexec_load(2) and reboot(2) system calls. The kexec utility prepares, loads, and starts a new operating environment replacing the currently running kernel.  When the new environment is the same kernel that is running, it is effectively a reboot of the existing system.
The primary difference between a standard system boot and a
.B kexec
boot is that the running kernel directly invokes the new kernel instead of calling the BIOS or firmware.  Because the firmware is bypassed, any hardware initialization normally performed by the firmware is not performed during a
.B kexec
boot. This has the effect of reducing the time required for a reboot.
.PP
To use kexec, your running kernel must have been compiled with the
.B CONFIG_KEXEC=y
, this enables the kexec_load(2) system call.
.SH USAGE
Using
.B kexec
consists of

.RS
(1) loading the kernel to be rebooted into memory. A kernel is loaded with the \fB-l\fR option.  The operating environment such as initrd and command line parameters is specified using the optional and \fB\-\-initrd\fR \fB\-\-append\fR options.
.RE
.RS
(2) actually rebooting to the pre-loaded kernel using the \fB-e\fR option.
.RE
.PP

.I kernel\-image
is the kernel file that you intend to reboot to.  The kexec program recognizes several file formats for the linux kernel depending on architecture.  For most architectures the perferred format is a linux kernel in elf format (vmlinux).
.PP
When rebooting into a new linux kernel and supplying the \fIkernel\fR parameters, a good staring point are those passed to the existing kernel.  They can be found in the file /proc/cmdline.
.PP
If your environment requires the use of an initrd you will most likley need to specify that image using \-\-initrd=
.I \initrd\-image
option.
.PP

.SH EXAMPLE
.PP
For example, if the kernel image you want to reboot to is
.BR /boot/vmlinux,
and the contents of /proc/cmdline is
.BR "root\=/dev/hda1 vga=0x317 selinux=0"
, and the path to the initrd is
.BR /boot/initrd
, then you would use the following command to load the kernel:

.RS
.B kexec
\-l\  /boot/vmlinux
\-\-append="root=/dev/hda1 vga=0x317 selinux=0" \-\-initrd=/boot/initrd
.RE
.PP
After this kernel is loaded, it can be booted to at any time using the
command:

.RS
.BR kexec \ \-e
.RE

.SH OPTIONS
.TP
\fB\-e\fR, \fB\-\-exec\fR Run the currently loaded kernel.
.TP
\fB\-f\fR, \fB\-\-force\fR Force an immediate \fBkexec\fR
call, do not call shutdown.
.TP
\fB\-h\fR, \fB\-\-help\fR
Open a help file for \fBkexec\fR.
.TP
\fB\-l\fR, \fB\-\-load\fR \fIkernel\fR 
Load the specified \fIkernel\fR into the current kernel.
.TP
\fB\-p\fR, \fB\-\-load\-panic\fR Load the new kernel for use on panic.  This option is used by kdump.
.TP
\fB\-t\fR, \fB\-\-type=\fRtype Specify that the new kernel is of this
.I type.
.TP
\fB\-u\fR, \fB\-\-unload\fR Unload the current \fBkexec\fR target kernel.
.TP
\fB\-v\fR, \fB\-\-version\fR Return the version number of the installed utility.
.TP
\fB\-x\fR, \fB\-\-no\-ifdown\fR
Shut down the running kernel, but restore the interface on reload. (If
this option is used, it must be specified last.)
.TP
.BI \-\-mem\-min= addr
Specify the lowest memory address
.I addr
to load code into.
.TP
.BI \-\-mem\-max= addr
Specify the highest memory address
.I addr
to load code into.

.SH SUPPORTED KERNEL FILE TYPES AND OPTIONS
.B Beoboot-x86
.RS
.TP
.B \-\-args\-elf
Pass ELF boot notes.
.TP
.B \-\-args\-linux
Pass Linux kernel style options.
.TP
.B \-d|\-\-debug
Enable debugging messages.
.TP
.B \-\-real\-mode
Use the kernel's real mode entry point.
.RE
.PP
.B elf-x86
.RS
.TP
.BI \-\-append= string
Append
.I string
to the kernel command line.
.TP
.BI \-\-command\-line= string
Set the kernel command line to
.IR string .
.TP
.BI \-\-initrd= file
Use
.I file
as the kernel's initial ramdisk.
.TP
.BI \-\-ramdisk= file
Use
.I file
as the kernel's initial ramdisk.
.RE
.PP
.B multiboot-x86
.RS
.TP
.BI \-\-command\-line= string
Set the kernel command line to
.IR string .
.TP
.BI \-\-module= "mod arg1 arg2 ..."
Load module
.I mod
with command-line arguments
.I "arg1 arg2 ..."
This parameter can be specified multiple times.
.RE

.SH ARCHITECTURE OPTIONS
.TP
.B \-\-console\-serial
Enable the serial console.
.TP
.B \-\-console\-vga
Enable the VGA console.
.TP
.B \-\-elf32\-core\-headers
Prepare core headers in ELF32 format.
.TP
.B \-\-elf64\-core\-headers
Prepare core headers in ELF64 format.
.TP
.B \-\-reset\-vga
Attempt to reset a standard VGA device.
.TP
.BI \-\-serial= port
Specify the serial
.I port
for debug output.
.TP
.BI \-\-serial\-baud= baud_rate
Specify the
.I baud rate
of the serial port.
